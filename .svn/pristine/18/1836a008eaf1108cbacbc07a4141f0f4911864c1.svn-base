package com.risenb.controller.manage;
import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.risenb.aop.LogerAnnotation;
import com.risenb.base.BaseControllor;
import com.risenb.manage.bean.Page;
import com.risenb.manage.bean.SysLog;
import com.risenb.manage.service.SysLogService;
import com.risenb.util.StringUtil;

/**
 * <p>
 * Title:操作日志控制类
 * </p>
 * <p>
 * Description:
 * </p>
 * 
 * @version 1.0
 */
@Controller("sysLogController")
@RequestMapping("sysLog")
public class SysLogController extends BaseControllor{
	@Resource
	SysLogService sysLogService;
	@Autowired
	ThreadPoolTaskExecutor threadPool;

	/**
	 * 操作记录列表
	 * @param params
	 * @param idkey
	 * @return
	 */
	@RequestMapping(value = "/list")
	public ModelAndView list(@RequestParam Map<String, Object> params, Integer idkey,Integer pageSize, Integer pageCurrent) {
		ModelAndView mv = new ModelAndView("manage/system_log");
		Page<SysLog> page  = new Page<SysLog>().setPageNo(pageCurrent == null ? 1 : pageCurrent).setPageSize(pageSize == null ? 15 : pageSize)
				.setParams(params);
		page = sysLogService.queryLogList(page);
		mv.addObject("page", page);
		return mv;
	}
	
	@LogerAnnotation(isLog = false)
	public void createSysLog(String methodName,Integer manageId,Integer permissionId, Date start, Date end, Long time, Object[] arguments, Object result) {
		threadPool.execute(new Runnable() {
			public void run() {
				String argsStr = JSON.toJSONString(arguments);
				String resultStr = JSON.toJSONString(result);
				SysLog sysLog = new SysLog();
				sysLog.setLogId(StringUtil.getUUID());
				sysLog.setMethodName(methodName);
				sysLog.setManageId(manageId);
				sysLog.setPermissionId(permissionId);
				sysLog.setStartTime(start);
				sysLog.setEndTime(end);
				sysLog.setConsum(time.intValue());
				sysLog.setArgs(argsStr);
				sysLog.setResult(resultStr);
				sysLog.setCreateTime(new Date());
				sysLog.setStatus(0);
				sysLogService.createSysLog(sysLog);
			}
		});
	}
  
}
