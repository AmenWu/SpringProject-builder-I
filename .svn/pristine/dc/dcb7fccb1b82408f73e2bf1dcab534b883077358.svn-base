package com.risenb.cache;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpSession;

import com.risenb.manage.bean.Permission;

/**
 * <pre>
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2010 - 2016 </p>
 * <p>Company: Beijing Risenb Technology Co.,Ltd. </p>
 * <p>Build: 2017骞�7鏈�26鏃� 涓嬪崍5:00:57 </p>
 * </pre>
 *
 * @author Chang Yuxin
 * @version 1.0
 */
public class CacheFactory {
	private static Map<String, Object> CACHE = new HashMap<String, Object>();

	// HashMap<String,HttpSession>();//绠＄悊鍛樼櫥褰曠殑session绠＄悊
	private static Map<String, HttpSession> LOGIN_STATUS_CACHE = new HashMap<String, HttpSession>(0);// 绠＄悊鍛樼櫥褰曠殑session绠＄悊

	private static Map<Integer, Permission> PERMISSION_CACHE = new HashMap<Integer, Permission>();

	static {
		CACHE.put("LOGIN_STATUS", LOGIN_STATUS_CACHE);
		CACHE.put("PERMISSION_CACHE", PERMISSION_CACHE);
	}

	/**
	 * @param cacheName
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public static Object get(String cacheName) {
		return (Map<Object, Object>) CACHE.get(cacheName);
	}

	/**
	 * @param cacheName
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public static Object get(String cacheName, Object key) {
		return ((Map<Object, Object>) CACHE.get(cacheName)).get(key);
	}

	/**
	 * @param cacheName
	 * @param key
	 * @param value
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public static void put(String cacheName, Object key, Object value) {
		Map<Object, Object> map = (Map<Object, Object>) CACHE.get(cacheName);
		map.put(key, value);
	}

	/**
	 * @param cacheName
	 * @param key
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public static boolean contains(String cacheName, Object key) {
		return ((Map<Object, Object>) CACHE.get(cacheName)).containsKey(key);
	}

	/**
	 * @param string
	 * @param userName
	 */
	@SuppressWarnings("unchecked")
	public static void remove(String cacheName, Object key) {
		((Map<Object, Object>) CACHE.get(cacheName)).remove(key);
	}
	
	/**
	 * @param string
	 * @param userName
	 */
	@SuppressWarnings("unchecked")
	public static void clear(String cacheName) {
		((Map<Object, Object>) CACHE.get(cacheName)).clear();
	}

}
